To do:

Some domains are cnames that do point at us, but are being reported as if they don't. Examples www.abbysantos.com, carriearmstrong.mywindermere.com.
	check if the only record is a cname
	if so, get the cname record
	get the domain name that the cname points to
	look up the a record for this domain
	use not pointed_at_us? to determine if it's ours
	return true if it's a cname to a domain that's pointed at us
	return false if there is no cname

Add method to Configurator that will report it's state so I can have one debug line that shows all the options.
Take input from stdin instead of a file.
Send output to stdout

Get exit code of a program: `echo $?`

Commands

bundle exec nombus -s tab --log-level debug tmp/test_domains-tabs.csv
bundle exec nombus --no-headers --log-level debug tmp/test_domains-no_headers.csv
include DEBUG=true with command in order to see stack trace.
Example: DEBUG=true bundle exec nombus -c 0 --log-level debug tmp/test_domains-short.csv

DEBUG=true bundle exec nombus tmp/test_domains-short.csv
DEBUG=true bundle exec nombus --no-headers tmp/test_domains-no_headers.csv
DEBUG=true bundle exec nombus -o domains.csv -f fails.csv tmp/test_domains-long.csv
DEBUG=true bundle exec nombus -c 3 tmp/test_domains-column3.csv
DEBUG=true bundle exec nombus -s '|' tmp/test_domains-pipes.csv
DEBUG=true bundle exec nombus --no-headers -s '\t' tmp/test_domains-tabs-no_headers.csv
DEBUG=true bundle exec nombus -s '\t' tmp/test_domains-tabs.csv
external-domains-active.csv

dns config example
dns = DNS.new( {:nameserver=>["8.8.8.8", "8.8.4.4"], :search=>["withwre.com", "mywindermere.com"], :ndots=>1} )

aaronsod.com - has old paws ip 205.234.73.177

A simple way to print instance variables for a class:
puts c.instance_variables.map {|e| "#{e}: #{c.instance_variable_get(e)}" }
